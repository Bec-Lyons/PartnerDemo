{
  "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "actions": {
          "Complete_the_message_in_a_queue": {
              "type": "ApiConnection",
              "inputs": {
                  "host": {
                      "connection": {
                          "referenceName": "servicebus"
                      }
                  },
                  "method": "delete",
                  "path": "/@{encodeURIComponent(encodeURIComponent('successfulpayments'))}/messages/complete",
                  "queries": {
                      "lockToken": "@triggerBody()?['LockToken']",
                      "queueType": "Main",
                      "sessionId": ""
                  }
              },
              "runAfter": {
                  "Deliveries_Orchestration": [
                      "Succeeded"
                  ]
              }
          },
          "Dead-letter_the_message_in_a_queue": {
              "type": "ApiConnection",
              "inputs": {
                  "host": {
                      "connection": {
                          "referenceName": "servicebus"
                      }
                  },
                  "method": "post",
                  "path": "/@{encodeURIComponent(encodeURIComponent('successfulpayments'))}/messages/deadletter",
                  "queries": {
                      "lockToken": "@triggerBody()?['LockToken']",
                      "deadLetterReason": "",
                      "deadLetterErrorDescription": "",
                      "sessionId": ""
                  }
              },
              "runAfter": {
                  "Deliveries_Orchestration": [
                      "TIMEDOUT",
                      "SKIPPED",
                      "FAILED"
                  ]
              }
          },
          "Deliveries_Orchestration": {
              "type": "Scope",
              "actions": {
                  "Parse_JSON": {
                      "type": "ParseJson",
                      "inputs": {
                          "content": "@triggerBody()",
                          "schema": {
                              "type": "object",
                              "properties": {
                                  "orderID": {
                                      "type": "string"
                                  }
                              }
                          }
                      },
                      "runAfter": {}
                  },
                  "HTTP": {
                      "type": "Http",
                      "inputs": {
                          "method": "GET",
                          "uri": "https://retailapihub.azure-api.net/orders/orders/{@{body('Parse_JSON')?['orderID']}}"
                      },
                      "runAfter": {
                          "Parse_JSON": [
                              "Succeeded"
                          ]
                      }
                  },
                  "Transform_XML": {
                      "type": "Xslt",
                      "inputs": {
                          "content": "@body('HTTP')",
                          "map": {
                              "name": "map.xslt"
                          }
                      },
                      "runAfter": {
                          "HTTP": [
                              "Succeeded"
                          ]
                      }
                  },
                  "Encode_to_X12_message_by_agreement_name": {
                      "type": "ApiConnection",
                      "inputs": {
                          "host": {
                              "connection": {
                                  "referenceName": "x12"
                              }
                          },
                          "method": "post",
                          "body": "@outputs('Transform_XML')?['body']",
                          "path": "/encode/resolvebyname",
                          "queries": {
                              "agreementName": "DeliveriesAgreement"
                          }
                      },
                      "runAfter": {
                          "Transform_XML": [
                              "Succeeded"
                          ]
                      }
                  },
                  "Until_Partner_Ack_200_OK": {
                      "type": "Until",
                      "expression": "@equals(outputs('HTTP')['statusCode'], 200)",
                      "limit": {
                          "count": 60,
                          "timeout": "PT1H"
                      },
                      "actions": {
                          "Send_encoded_message_to_delivery_partners": {
                              "type": "Http",
                              "inputs": {
                                  "method": "POST",
                                  "uri": "https://fedex.deliveries/requests/@{body('Parse_JSON')?['orderID']}",
                                  "body": "@body('Encode_to_X12_message_by_agreement_name')"
                              },
                              "runAfter": {}
                          }
                      },
                      "runAfter": {
                          "Encode_to_X12_message_by_agreement_name": [
                              "Succeeded"
                          ]
                      }
                  }
              },
              "runAfter": {}
          }
      },
      "triggers": {
          "When_a_message_is_received_in_a_queue_(peek-lock)": {
              "type": "ApiConnection",
              "inputs": {
                  "host": {
                      "connection": {
                          "referenceName": "servicebus"
                      }
                  },
                  "method": "get",
                  "path": "/@{encodeURIComponent(encodeURIComponent('neworder'))}/messages/head/peek",
                  "queries": {
                      "queueType": "Main",
                      "sessionId": "None"
                  }
              },
              "recurrence": {
                  "frequency": "Second",
                  "interval": 15
              }
          }
      },
      "contentVersion": "1.0.0.0",
      "outputs": {}
  },
  "kind": "Stateful"
}