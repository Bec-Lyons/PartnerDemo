{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Scope": {
                "type": "Scope",
                "actions": {
                    "Parse_JSON": {
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@triggerBody()",
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "number": {
                                        "type": "string"
                                    },
                                    "item": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    },
                                    "address": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "runAfter": {}
                    },
                    "Invoke_a_workflow_in_this_workflow_app": {
                        "type": "Workflow",
                        "inputs": {
                            "host": {
                                "workflow": {
                                    "id": "OrderProcessor"
                                }
                            },
                            "body": {
                                "address": "@body('Parse_JSON')?['address']",
                                "item": "@body('Parse_JSON')?['item']",
                                "name": "@body('Parse_JSON')?['name']",
                                "number": "@body('Parse_JSON')?['number']",
                                "quantity": "@body('Parse_JSON')?['quantity']"
                            }
                        },
                        "runAfter": {
                            "Parse_JSON": [
                                "Succeeded"
                            ]
                        }
                    }
                },
                "runAfter": {}
            },
            "Complete_the_message_in_a_queue": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "servicebus_1"
                        }
                    },
                    "method": "delete",
                    "path": "/@{encodeURIComponent(encodeURIComponent('neworders'))}/messages/complete",
                    "queries": {
                        "lockToken": "@triggerBody()?['LockToken']",
                        "queueType": "Main",
                        "sessionId": ""
                    }
                },
                "runAfter": {
                    "Scope": [
                        "Succeeded"
                    ]
                }
            },
            "Dead-letter_the_message_in_a_queue": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "servicebus_1"
                        }
                    },
                    "method": "post",
                    "path": "/@{encodeURIComponent(encodeURIComponent('neworders'))}/messages/deadletter",
                    "queries": {
                        "lockToken": "@triggerBody()?['LockToken']",
                        "deadLetterReason": "",
                        "deadLetterErrorDescription": "",
                        "sessionId": ""
                    }
                },
                "runAfter": {
                    "Scope": [
                        "TIMEDOUT",
                        "FAILED",
                        "SKIPPED"
                    ]
                }
            }
        },
        "triggers": {
            "When_a_message_is_received_in_a_queue_(peek-lock)": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "servicebus"
                        }
                    },
                    "method": "get",
                    "path": "/@{encodeURIComponent(encodeURIComponent('neworders'))}/messages/head/peek",
                    "queries": {
                        "queueType": "Main",
                        "sessionId": "None"
                    }
                },
                "recurrence": {
                    "frequency": "Second",
                    "interval": 15
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {}
    },
    "kind": "Stateful"
}